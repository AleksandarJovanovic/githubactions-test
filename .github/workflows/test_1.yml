name: test_1 Workflow

on:
  workflow_dispatch:
    inputs:
      time:
        description: "Target start time in HH:mm (24h UTC)"
        required: false
  schedule:
    - cron: '45 07,08 * * *'  # UTC times for triggering the workflow during summer and winter time

jobs:
  print-message:
    runs-on: windows-latest
    steps:
      - name: Print message
        run: echo "Hello from test_1 workflow!"

      - name: Print execution time (Stockholm)
        run: |
          $stockholmTime = [System.TimeZoneInfo]::ConvertTimeBySystemTimeZoneId((Get-Date), 'Europe/Stockholm')
          Write-Output "Current time in Stockholm: $($stockholmTime.ToString('HH:mm'))"

      - name: Set default values for scheduled runs
        if: github.event_name == 'schedule'
        run: |
          echo "LOCAL_TIME=09:45" >> $env:GITHUB_ENV

      # Compensate with a 20-min grace period for the possible delay of a potentially busy runner's delay in picking up this workflow for execution
      - name: Verify Stockholm time
        run: |
          $time = "${{ inputs.time || env.LOCAL_TIME }}"
          $hour, $minute = $time -split ":"
          $validTimes = @()
          for ($i = 0; $i -le 20; $i++) {
            $validMinute = ([int]$minute + $i) % 60
            $validHour = [int]$hour + (([int]$minute + $i) / 60 -eq 1 ? 1 : 0)
            $validTimes += "{0:D2}:{1:D2}" -f [int]$validHour, [int]$validMinute
          }
          echo "Valid times: $($validTimes -join ', ')"
          # Get current time in Stockholm
          $currentTime = ([System.TimeZoneInfo]::ConvertTimeBySystemTimeZoneId((Get-Date), 'Europe/Stockholm')).ToString("HH:mm")
          if ($validTimes -contains $currentTime) {
            echo "Workflow continues its execution as a valid time is near $time (actual Stockholm time: $currentTime)"
          } else {
            echo "Current time in Stockholm is $currentTime. Stopping workflow."
            exit 0
          }

      - name: Execution step
        if: steps.Verify_Stockholm_time.outcome != 'success'
        run: echo "Final step executed!"
